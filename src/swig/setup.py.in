from glob import glob

import setuptools.command.install
from distutils.core import Extension


STEM = "${CMAKE_CURRENT_BINARY_DIR}/${SWIG_MODULE_swid_api_REAL_NAME}"


def find_module_of_given_stem(stem):
    return glob("{}.*".format(stem))[0]


# Extensions built by Python itself don't play nicely with the wrapper generated by SWIG.
swid_api_module = Extension(
    "swid_api",
    sources=["${CMAKE_CURRENT_BINARY_DIR}/swid_apiPYTHON_wrap.cxx"],
    libraries=["swid"],
    include_dirs=["${CMAKE_SOURCE_DIR}/src"],
    library_dirs=["${CMAKE_BINARY_DIR}"],
)


if __name__ == "__main__":
    setuptools.setup(
        name="swid",
        version="${VERSION_FULL}",
        description="Library for interfacing with SWID tags",
        url='https://github.com/OpenSCAP/libswid',
        packages=["swid"],
        license="LGPL 2.1",
        author="Matěj Týč",
        author_email="matyc@redhat.com",
        package_data={'swid': [find_module_of_given_stem(STEM)]},
    )
